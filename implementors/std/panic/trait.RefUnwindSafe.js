(function() {var implementors = {};
implementors["web_tree_sitter_sys"] = [{"text":"impl RefUnwindSafe for Edit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoggerParams","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Language","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Point","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PredicateOperand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PredicateResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Query","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryCapture","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryMatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Range","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SyntaxNode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tree","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeCursor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Parser","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()