(function() {var implementors = {};
implementors["web_tree_sitter_sys"] = [{"text":"impl Freeze for Edit","synthetic":true,"types":[]},{"text":"impl Freeze for LoggerParams","synthetic":true,"types":[]},{"text":"impl Freeze for Language","synthetic":true,"types":[]},{"text":"impl Freeze for LanguageError","synthetic":true,"types":[]},{"text":"impl Freeze for ParseOptions","synthetic":true,"types":[]},{"text":"impl Freeze for Point","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateOperand","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateResult","synthetic":true,"types":[]},{"text":"impl Freeze for Query","synthetic":true,"types":[]},{"text":"impl Freeze for QueryCapture","synthetic":true,"types":[]},{"text":"impl Freeze for QueryError","synthetic":true,"types":[]},{"text":"impl Freeze for QueryMatch","synthetic":true,"types":[]},{"text":"impl Freeze for Range","synthetic":true,"types":[]},{"text":"impl Freeze for SyntaxNode","synthetic":true,"types":[]},{"text":"impl Freeze for Tree","synthetic":true,"types":[]},{"text":"impl Freeze for TreeCursor","synthetic":true,"types":[]},{"text":"impl Freeze for Parser","synthetic":true,"types":[]},{"text":"impl Freeze for ParserError","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()