(function() {var implementors = {};
implementors["web_tree_sitter_sys"] = [{"text":"impl Deref for Edit","synthetic":false,"types":[]},{"text":"impl Deref for LoggerParams","synthetic":false,"types":[]},{"text":"impl Deref for Language","synthetic":false,"types":[]},{"text":"impl Deref for LanguageError","synthetic":false,"types":[]},{"text":"impl Deref for ParseOptions","synthetic":false,"types":[]},{"text":"impl Deref for Point","synthetic":false,"types":[]},{"text":"impl Deref for PredicateOperand","synthetic":false,"types":[]},{"text":"impl Deref for PredicateResult","synthetic":false,"types":[]},{"text":"impl Deref for Query","synthetic":false,"types":[]},{"text":"impl Deref for QueryCapture","synthetic":false,"types":[]},{"text":"impl Deref for QueryError","synthetic":false,"types":[]},{"text":"impl Deref for QueryMatch","synthetic":false,"types":[]},{"text":"impl Deref for Range","synthetic":false,"types":[]},{"text":"impl Deref for SyntaxNode","synthetic":false,"types":[]},{"text":"impl Deref for Tree","synthetic":false,"types":[]},{"text":"impl Deref for TreeCursor","synthetic":false,"types":[]},{"text":"impl Deref for Parser","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()